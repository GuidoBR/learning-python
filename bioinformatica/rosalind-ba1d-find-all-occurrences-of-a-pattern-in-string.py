import doctest


def pattern_matching(pattern, genome):
    """
    https://rosalind.info/problems/ba1d/

    In this problem, we ask a simple question: how many times can one string occur as a substring of another? Recall from “Find the Most Frequent Words in a String” that different occurrences of a substring can overlap with each other. For example, ATA occurs three times in CGATATATCCATAG.

    Pattern Matching Problem
    Find all occurrences of a pattern in a string.

    Given: Strings Pattern and Genome.

    Return: All starting positions in Genome where Pattern appears as a substring. Use 0-based indexing.
    >>> pattern_matching("ATAT", "GATATATGCATATACTT")
    '1 3 9'
    >>> pattern_matching("ATA", "GACGATATACGACGATA")
    '4 6 14'
    >>> pattern_matching("CAAATTTCA", "TCCAAATTTCAAATTTATGCAAATTTCCCCAAATTTATTCAACAAATTTCAAATTTTCACAAATTTGTAGTCACACTACCAAATTTAGACAAATTTCAAATTTGTCAAATTTCCAAATTTTTCTCAAATTTTCACCAAATTTCAAATTTTGCGCAAATTTGCCAAATTTGGCAAATTTCAAATTTACAAATTTCAAATTTGTGAACAAATTTCTTCAAATTTCACAAATTTCAAATTTCTTGCAAATTTCATGTCGCAAATTTCCCCAAATTTTTCAAATTTCCTTACAAATTTCCTTTCAAATTTCAAATTTACAAATTTTCCAAATTTTCAGCCAAATTTGTCCTTCCAAATTTACAAATTTTAGCCAAATTTCAAATTTTCGCAAATTTAGCCAAATTTCCGCAAATTTCAAATTTTGCAAATTTTCAAATTTCCAAAGATCAAATTTACAAATTTTGAGTAGATCAAATTTTTGTCAAATTTCTACAAATTTGGCTTTGCAAATTTCAAATTTTCAAATTTCGGCCGCTTGCAAATTTCCCGCAAATTTGGCAAATTTTAGCGGCCAAATTTCTGACGCAAATTTCAAATTTCAAATTTCAAATTTGAACCGTGTCAAATTTCTGTCTCAATACAAATTTTCAAATTTCAAACAAATTTTGTCCACCAAATTTGCAAATTTGCAAATTTCAAATTTTCAAATTTCAAATTTCTCAAATTTCAGCAGCAAATTTGACAAATTTTGCAAATTTCAAATTTGCAAATTTCGCAAATTTTACAAATTTCAAATTTCCGCAAATTTTGGGACGCCAAATTTGATTTTATTCAAATTTTCAAATTTCAAATTTTTGTACCCCGCAAATTTTCCAAATTTCTTCACACAAATTTAGCAAATTTCAAATTTGGCTGGCCAAATTTCAAATTTCAAATTTAGCAAATTTGCGGCCAAATTTTGTCAAATTTCGCCAAATTTTGCCCAAATTTTTTTCAAATTTCAAATTTCGTAAGGGAGAACAAATTTCAAATTTGCAAATTTCAAATTTACCATCAAATTTACAAATTTTGCAAATTTCCTGGTCAAATTTTCACACATCCAAATTTGCTTCAAATTTCCTCAGCGGTACAAATTTTCGTTTACAAATTTCCTCAAATTTCAAATTTGATACATCCAAATTTATTCTCAAATTTGCAAATTTTACAAATTTCAAATTTCGACAAATTTCAAATTTGGCAAATTTTCAAATTTTTCAAATTTAGTCAAATTTGGCCAAATTTTGTCAAATTTAGGGGTCAAATTTTACAAATTTACACGGGACCAAATTTTCCGGTCCAAATTTACAAATTTGCAAATTTCACTCAAATTTCAAATTTCAAATTTCAAATTTACAAATTTTATCAAATTTTTTTCAAATTTAGTAATCAAATTTTGATGCGCCAAATTTGCAAATTTCAAATTTAACGGGTCATCCGGACAAATTTGGGCAAATTTCCAAATTTCCGCACGACAAATTTATCAAATTTGCAAATTTTGGGTGCAAATTTCCCGTCAAATTTCTCAACAAATTTCATCAAATTTCAAATTTGGACCAGTCCCAAATTTCAAATTTCCTTCCAAATTTCAAATTTGTTAAGCAAATTTTAGTCAAATTTTCCACAAATTTCAAATTTACGAAGCACAAATTTACAAATTTAGTCCAAATTTCAAATTTCAAATTTCTTGCCAGGTAGCAAATTTACTCAAATTTCGTACTGTTGCAAATTTGGCAAATTTACAAATTTTATAAGACCAAATTTCGCAAATTTTACGTCAAATTTGGGTTCAGCTTCAAATTTCTTTCAAATTTCTCAAATTTACAAATTTACTGCAAATTTCGCCAAATTTGCGTCAAATTTCAAATTTCCTACTCAAATTTCCAAATTTCACCCAAATTTGTCAAATTTGCAAATTTACAAATTTCAAATTTCAAATTTCACAAATTTTCTCGGGCCAAATTTCCAAATTTCATCAAATTTATTTGTCAAATTTGTTTCAAATTTGTCGGTAACAAATTTCAAATTTCCATATAACAAATTTATGCCAAATTTCAAATTTCCAAATTTGTTGTACCCGTTGCAAATTTTAAGAATTCAAATTTACCAAATTTCAAATTTTCTTCAAATTTCAAATTTCAAATTTAATCAAATTTGCAAATTTGCAAATTTCTTGTATACAAATTTAGCAAATTTGACAAATTTACACAAATTTGCCCAAATTTTTGCAAATTTCGTCCAAATTTTTCAAATTTTTCCCAAATTTCACTCTTCAAATTTCAAATTTCAAATTTTCATGCTACAAATTTTCCAAATTTCAAATTTTGCCAACAAATTTCCAAATTTCAAATTTCAAATTTACCAAATTTTCTGGGCAAATTTGGGCAAATTTATTACAAATTTAGCATACAAATTTAGCAAATTTATTCAAATTTCAAATTTACCCAAATTTAGGGGCAAATTTAGCGCAAATTTGCTTCAAATTTCTCAAATTTAGTCGGAACAAATTTCAAATTTTACAAATTTGTATCAAATTTGGACAAATTTAGCAAATTTGGGCACACAAATTTCGCAAATTTACAAATTTCAAATTTGTCTCAAATTTAGCAAATTTCCTACAAATTTTTACAAATTTCAAATTTTCAAATTTCAAATTTATCAAATTTCAAATTTGTGCAAATTTCTTAATCAAATTTGGGCAAATTTTCAAATTTCAAATTTCAAATTTCGTAATCAAATTTGCAAATTTCAAATTTAGTATCTTGCCAAGTAGGTCCGTGTACAGCAAATTTTACCAAATTTACAAATTTCTCAAATTTAATACACAAATTTAACCTACAAATTTTAACCCAAATTTCAAATTTAGAGCAAATTTGCAAATTTCTGCAAATTTTGAATCAAATTTCAAATTTACTCAAATTTCTGCAATCAAATTTACTGTGCAAATTTCAAATTTACAAATTTGGTACAACACAAATTTCAAATTTCGATCAGATCCTCAAATTTACCATGCCACGACAAATTTCAAATTTCAAATTTGATGCCAAATTTTCAAATTTCAAATTTATATTGGCAAATTTTCAAATTTCCCAAATTTATCAAATTTTAGTAACAAATTTCAAATTTCCCACAAATTTACGCAAATTTCAAATTTCAAATTTCAAATTTTGTTGCGTTAGCTGAAGTAACAAATTTTTCACCAAATTTTCAAATTTTCGGCTTGTACCCAAATTTAATCAAATTTATCAAATTTTTGGCAAATTTGACAAATTTCTCAAATTTCAAATTTCACAAATTTCAGCAAATTTCATGCAAATTTCAAATTTCAAATTTTCAAATTTCCAAATTTCTTGCAAATTTCAAATTTTCAAATTTCTTACCAAATTTGGCAAATTTCAAATTTCAAATTTCCACAAATTTACAGCAAATTTTCAAATTTTAACCAAATTTCAAATTTTGGACGCAAATTTACCCAAATTTCCAAATTTGGTCAAATTTTCAAATTTCAAATTTTTTATGGTGCAAATTTCGCAAATTTCAAATTTCCAAATTTCACAAATTTCGAGTACAAATTTGCAAATTTTGCCAAATTTGTCAAATTTGCGCGGCAAATTTTACAAATTTAGTGCCAAATTTAACTCAAATTTCAAATTTAAACACATGCAAATTTTATAGACGATCCAAATTTGCCGCCAAATTTGTGCAAATTTCAAATTTCAAATTTAGCAAATTTCAAATTTCAGCAAATTTCTGATGTCAAATTTGCGTGCCAAATTTGGCAAATTTCAAATTTCTCAAATTTTCAAATTTCAAATTTTGCTGCGCAAATTTGCCAAATTTCAAATTTCAAATTTCTGCAAATTTCTCCACGGCCAAATTTCCAAATTTCCAAATTTCACAAATTTGTCAAATTTTTCAAATTTTGAAGTCAAATTTTTCAAATTTATAAGACAAATTTGAGCAAATTTCGACAAATTTACAAATTTCAAATTTCCGCACAAATTTGACAAATTTCCAAATTTCCTCTACAAATTTCAAATTTAACAAATTTCTGTCAAATTTCCTTGCCAAATTTCAAATCAAATTTACGCAAATTTCAAATTTCAAATTTTCCAAATTTCAAATTTGCTTTCCAAATTTTCAAATTTGCAAATTTCAAATTTACGGGGTGACAAATTTCTCAAATTTCAAATTTTCAGGCCAAATTTCAAATTTCAAATTTAATTCAAATTTCAAATTTCAAATTTCCAAATTTCAAATTTACAAATTTCAAATTTCAAATTTGGTGCGTCCAAATTTCCAAATTTCTTCAAATTTTGGCAAATTTACACAAATTTGACCAAATTTCTCGAACAAATTTTCCAAATTTCAAATTTACCAAATTTCAAATTTACGTCAAATTTGGCAAATTTACAAATTTCGCAAATTTGACAAATTTAGATTCAAATTTACCAAATTTCAAATTTAGATAATGGCGCTCCCAAATTTCAAATTTACCAAATTTCATGGTAGCACACAAATTTTATCAAATTTACAAATTTCAAATTTCTGTCAAATTTGGCAAATTTTACTTAGCAAATTTAGTCTGACTGGCTGCTCAATAGCGAAATCGAAAAGGACAAATTTCAAATTTGCAAATTTCAAATTTGTCAAATTTGCAAATTTCAAATTTTCAAATTTAGCAAATTTCAAATTTTACCAAATTTAGGGGTGGGCAAATTTCGCAAATTTCGCAAATTTCAAATTTACAAATTTTTATGCAAATTTAACGACAAATTTGATGTAATGTACCAAATTTGCTGTATTGACAAATTTGCAAATTTCAAATTTACAAATTTGCAAATTTTTAGCAAATTTGCAAATTTCAAATTTCAAATTTCCGCCAAATTTGCAAATTTCCCAAATTTCAAATTTATGCTGCCAAATTTGACAAATTTGGGTACGCAAATTTTTCCCAAATTTGACAAATTTTGTCAATTGTCAAATTTCAAATTTCAAATTTGAGCCAAATTTGTCCAAATTTACAAATTTGCCAAATTTCAAATTTCACAAATTTCAAATTTCAAATTTACAAATTTCAAATTTACAAATTTCAAATTTTCCGTTCATACAAATTTGCAAATTTTCAAATTTGTCCCAAATTTTCGGACAAATTTAAAAAACCAAATTTCTCAAATTTCAAATTTCAAATTTAGGTGATCCAGGTGATTCAAATTTAACAAATTTGGCTACAAATTTCCAAATTTACAAATTTCCAAGTCAAATTTCACCAAATTTACAAATTTACAAATTTCCAAATTTTCCAAATTTGTTAAAACAAATTTGATGCCGCCAAATTTTTCAAATTTGCTTTCAAATTTCAAAACAAATTTGCCCAAATTTGGAGCCTAGGGGTGACCAAATTTGCAAATTTCAAATTTCTGGACGCAAATTTTCCAAATTTCTACAAATTTCATTCATTGCCAAATTTCAAATTTCCATCAAATTTACAAATTTCCCAAATTTCAAATTTCAAATTTACTCAAATTTGCCAAATTTCGCAACAAATTTCAAATTTGTCCAAATTTTATGTAGCAAATTTCAAATTTCAAATTTCAAATTTACAAATTTTCAAATTTGCAAATTTCTGACTAGGCAAATTTGCAAATTTACCAAATTTCAAATTTTCCGCAAATTTCAAATTTCAAATTTAACAAATTTCTCAAATTTCAAATTTGCAAATTTCAAATTTACCAAATTTGTCGCCAAATTTGAACAAATTTGTCTTCAAATTTTGCTCCAAGGTTCCGGCAAATTTACAAATTTATACAAATTTTGGCAAATTTGTTCAAATTTTCAAATTTTACCGCACAGGCAAATTTTCCAAATTTGAGGGGTCCAAATTTCAAATTTCTACAAATTTCAAATTTCCAAATTTAGCATATCAAATTTTTCAAATTTCTCAAATTTCAAATTTGCAAATTTCACAAATTTCAACAAATTTAGACAAATTTTGGACAAATTTCGTCAAATTTCAAATTTCAAATTTATACAACCAAATTTAAGGCCAAATTTCACAGCAAATTTTTTCAAATTTTCATCAAATTTGGAGTATCAAATTTGTTTTCAAATTTCAAATTTCAAATTTCAAATTTCAAATTTCAGCCAAATTTCTAGTGCAAATTTCAAATTTTTGGCGTTGCAAATTTTCCAAATTTTCAAATTTGCAAATTTGCAAATTTCAAATTTATCTCCAAATTTGCTTCAAATTTGAGAGGCCGGGGCCGCCGACCTACAAATTTGCAAATTTACCAAATTTCAAATTTCAAATTTGGCAAATTTGCCAAATTTCGTCAAATTTGCAAATTTCAAATTTCAAATTTTTCCAAATTTCTATCAAATTTGATCAAATTTGCAAATTTACCAAATTTGTCGAGTGATGCCACCAAATTTGCAAATTTCAAATTTAGTGCAAATTTTCAAATTTGCCCCAAATTTAACAAATTTTTCGCCAAATTTCAAATTTGCGCCAAATTTACAAATTTGCAAATTTCAAATTTGCTTTAAGGTCTGCAAATTTCAAATTTTAAGGCAAATTTCAAATTTTACTCAAATTTGCAAATTTATGACAAATTTGAACAAATTTTCCAAATTTGACCTTCAAATTTCAAATTTCCGAGACAAATTTGCAAATTTGGTACAAATTTCAAATTTATCAAATTTGGTCAAATTTCAAATTTACAAATTTAGATCCAAATTTGGTCAAATTTATTCAAATTTCAAATTTTCAAATTTGCAAATTTCAAATTTCGCAAATTTCCGGCAAATTTGATACGACGCAAATTTCAAATTTGAGGCACAAATTTGCAAATTTCTCGACAAATTTCAAATTTGTCAAATTTTCAAATTTCTCAAATTTATAGCAAATTTCATCAAATTTAAGTTCGCAAATTTGGTCCAAATTTCCAAATTTTCTCAAATTTAGTCAAATTTCAAATTTCCCACAAATTTTCCAAATTTCAAATTTCGCAAATTTTGTCAAATTTAACAGCAAATTTCAAATTTTTGCCAAATTTGCAAATTTCAAATTTTCAAATTTTCAAATTTGGACCTTATCAAATTTCCAAATTTTGTCAAATTTTAGTGGCGGCCATCCGAACCTCAAATTTTACCAAATTTTCAAATTTGTCAAATTTTTACCTTAGTCAAATTTGACCAAATTTCAAATTTCAAATTTCCAAATTTAAGAGTCAAATTTCTCAAATTTTCAAATTTGGACTCAAATTTACAAATTTCGCACAAATTTCAAATTTCCAAATTTACGTCCAAATTTCCCAAATTTCAAATTTGGATCTTACTACTGCTCAAATTTGCAAATTTCTCGATGGCCAAATTTAGCAAATTTCCCAAATTTGTACAAATTTACAAATTTGGCACAAATTTGCAAATTTTCAAATTTATTCACAAATTTGCCCCAAATTTACAAATTTCAAATTTGTTAGCAAATTTCCCCAAATTTAAATTCATTCGGGGCAAATTTACAAATTTCAAATTTCCCAAGCAAATTTACCAAATTTCTTTTCAAATTTTGGGAAGCAAATTTTGTCAAATTTGACAAATTTCTCAGGTATGCAAATTTCAAATTTTCAAATTTGACCCGCAAATTTGCAAATTTGGCAAATTTCAAATTTACAAATTTACCAAATTTACCGGCAAATTTTTCACAAATTTATGCACTTACAAATTTTGCTACTACAAATTTTTATCAAATTTCATCCAAATTTACAAATTTACAAATTTTTCATGACAAATTTGCAAATTTTAAGCAAATTTCGGAGCTGCCAAATTTCAAATTTCAAATTTCAAATTTGCAAATTTCAAATTTGACCCAAATTTAACACACAAATTTTCGTATTGAGCAAATTTCAAATTTCAAATTTGATACAAATTTTTCCAAATTTACTGAGATAGTAGAAGCAAATTTACAAATTTCCTTACTATAATTTGCAAATTTTTCAAATTTCCAAATTTTCCAAATTTCAAATTTACAAATTTCGCAAATTTCAAATTTCAAATTTATCCAAATTTCAAATTTTCGCCAAATTTCAAATTTCAAATTTACCATCAAATTTAATCCCAAATTTCCCAAATTTCAAATTTTGCAAATTTCAAATTTATCAAATTTCAAATTTGAACAAATTTACGACTTCAAATTTCAAATTTCTTCAAATTTCACACCAAATTTACAAATTTCAAATTTGCAAATTTCCAAATTTTCCAAATTTTCAAATTTCTACAAATTTTGGCAAATTTTCCTCCAAATTTCAAATTTAATACCCATCAAATTTAGGCGATCAAATTTACAAATTTCAAATTTCAAATTTTGCGCGCAAATTTGGTTTCCAAATTTCACAAATTTCCAAAACAAATTTTCAACAAATTTCTGCCCAAATTTTCCGCTATAGCAGTTCAAATTTGTGCAAATTTTCACAAATTTCAAATTTCATTGCGCGCTCAAATTTGTAAAACAAATTTCAAATTTCCCTCGCAAATTTTAGGTTAATCTCGACTACAAATTTACAAATTTCAAATTTACAGGGAGCGGCAAATTTGTAAGTTACCAAATTTCAAATTTTGAGAACAAATTTCCAAATTTTCAAATTTCAAATTTAGTCAAATTTGCAAATTTCAAATTTCAAATTTCTCAAATTTGCCAAATTTGACTCAAATTTCAAATTTACAAATTTCACAAATTTCAAATTTCAAATTTCAAGATAATCAAATTTCAAATTTCCAAATTTGCGGCCAAATTTCAAATTTGTAACAAATTTCAAATTTTTCCTATAGAAGCTGTACAAATTTGTCAAATTTAGCAAATTTCCAAATTTCAAATTTATCCAAATTTCTCGCAAATTTCACGTTTTCAAATTTCATGGACAAATTTACCCAAATTTGCAAATTTACAAATTTCAAATTTTCGCTCAAATTTCGCCAAATTTCAAATTTCTCAAATTTTCAAATTTCAAATTTTGCAAATTTGTTTAACTCGACGATCTGCGCGCGGGGAGGCAAATTTATGCCAAATTTCAAATTTGAAGGGCAAATTTGTCAAATTTTCTCAAATTTTCCACCGCAAATTTCAAATTTATCAAATTT")
    '2 42 89 135 171 186 215 224 242 299 368 405 503 582 589 596 645 686 701 717 748 781 837 893 914 921 991 1017 1032 1150 1201 1218 1349 1360 1367 1374 1446 1562 1572 1596 1615 1657 1698 1705 1889 1917 1953 1960 1967 1999 2048 2081 2140 2158 2165 2292 2306 2313 2344 2372 2379 2461 2536 2613 2661 2676 2692 2740 2747 2775 2883 2931 2975 3006 3051 3058 3085 3145 3173 3180 3187 3308 3315 3324 3334 3345 3352 3386 3422 3429 3476 3532 3564 3579 3673 3736 3743 3759 3766 3812 3836 3866 3873 3922 4012 4061 4101 4123 4130 4146 4182 4214 4234 4241 4259 4266 4281 4296 4303 4395 4411 4485 4514 4530 4567 4652 4667 4691 4715 4766 4849 4891 4898 4933 5014 5021 5066 5073 5082 5089 5104 5119 5205 5212 5293 5386 5439 5479 5496 5531 5538 5576 5607 5614 5621 5685 5703 5710 5735 5750 5911 5928 5975 5990 5999 6040 6047 6080 6139 6146 6153 6160 6167 6191 6247 6324 6331 6374 6381 6466 6524 6558 6585 6604 6673 6712 6738 6785 6808 6851 6891 6935 6998 7025 7063 7089 7228 7235 7311 7347 7495 7553 7644 7689 7778 7854 7861 7868 7883 7931 7938 8045 8069 8076 8093 8111 8118 8158 8174 8190 8221 8238 8258 8330 8375 8382 8415 8502 8509 8540 8592 8633 8669 8694 8701 8737 8752 8761 8768 8775 8791 8818 8836 8893 8921 8936 8975 9004 9028 9092 9145'
    """
    pattern_length = len(pattern)
    positions = []
    for position, letter in enumerate(genome):
        if pattern == genome[position: position + pattern_length]:
            positions.append(position)

    return " ".join(map(str, positions))

if __name__ == "__main__":
    doctest.testmod()
